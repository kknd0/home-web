import { cacheExchange } from '@urql/exchange-graphcache'
import { dedupExchange, fetchExchange } from 'urql'
import {
	LogoutMutation,
	MeDocument,
	MeQuery,
	PhoneLoginMutation,
	PhoneRegisterMutation,
} from '../generated/graphql'
import { betterUpdateQuery } from './betterUpdateQuery'
import { errorExchange } from './globalCatchErrors'

export const createUrqlClient = (ssrExchange: any) => ({
	url: 'http://localhost:4000/graphql',

	fetchOptions: {
		credentials: 'include' as const,
	},
	exchanges: [
		dedupExchange,
		cacheExchange({
			updates: {
				Mutation: {
					logout: (_result, args, cache, info) => {
						betterUpdateQuery<LogoutMutation, MeQuery>(
							cache,
							{ query: MeDocument },
							_result,
							() => ({ me: null })
						)
					},
					login: (_result, args, cache, info) => {
						betterUpdateQuery<PhoneLoginMutation, MeQuery>(
							cache,
							{ query: MeDocument },
							_result,
							(result, query) => {
								if (result.phoneLogin.errors) {
									return query
								} else {
									return {
										me: result.phoneLogin.user,
									}
								}
							}
						)
					},
					register: (_result, args, cache, info) => {
						betterUpdateQuery<PhoneRegisterMutation, MeQuery>(
							cache,
							{ query: MeDocument },
							_result,
							(result, query) => {
								if (result.phoneRegister.errors) {
									return query
								} else {
									return {
										me: result.phoneRegister.user,
									}
								}
							}
						)
					},
				},
			},
		}),
		errorExchange,
		ssrExchange,
		fetchExchange,
	],
})
